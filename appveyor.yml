version: 1.0-{build}
image:
- Visual Studio 2017
configuration:
- Debug
- Release
clone_depth: 1
environment:
  QT_VER: 5.13.2
  matrix:
  - CLIENT_TYPE: Internal
  - CLIENT_TYPE: External
install:
- ps: |
    $physx_sdk = "https://web.archive.org/web/20110806070516if_/http://developer.download.nvidia.com/PhysX/2.6.4/PhysX_2.6.4_SDK_Core.exe"

    If ($Env:CLIENT_TYPE -eq "External") {
      $Env:PLASMA_EXTERNAL_RELEASE = "ON"
    }

    if (!(Test-Path -PathType Container build)) {
        Write-Host "Creating build folder... " -noNewLine
        New-Item -ItemType directory build | Out-Null
        Write-Host "OK" -foregroundColor Green
    }

    Set-Location build

    $path = (Get-Location).Path

    if (!(Test-Path -PathType Container devlibs)) {
        Write-Host "Installing PhysX SDK... " -noNewLine
        Invoke-WebRequest $physx_sdk -OutFile PhysX_SDK.exe
        Start-Process -FilePath ".\PhysX_SDK.exe" -ArgumentList "/S /D=C:\PhysX_SDK" -Wait
        Write-Host "OK" -foregroundColor Green

        Write-Host "Installing Python modules... " -noNewLine
        C:\Python27\python.exe -m pip install -r ../requirements.txt 2> $null
        Write-Host "OK" -foregroundColor Green

        Write-Host "Installing library dependencies... "
        Set-Location C:\tools\vcpkg
        # Create our own custom triplet, for static-linking of libraries, but dynamic CRT linkage.
        If ($Env:CONFIGURATION -eq "Release") {
          Set-Content -Path "triplets/x86-windows-static-dyncrt.cmake" -Value "set(VCPKG_TARGET_ARCHITECTURE x86)`nset(VCPKG_CRT_LINKAGE dynamic)`nset(VCPKG_LIBRARY_LINKAGE static)`nset(VCPKG_BUILD_TYPE release)`n"
        } Else {
          Set-Content -Path "triplets/x86-windows-static-dyncrt.cmake" -Value "set(VCPKG_TARGET_ARCHITECTURE x86)`nset(VCPKG_CRT_LINKAGE dynamic)`nset(VCPKG_LIBRARY_LINKAGE static)`n"
        }
        git pull 2> $null
        bootstrap-vcpkg.bat
        vcpkg integrate install
        vcpkg install curl[sspi] expat freetype libjpeg-turbo libogg libpng `
          libtheora libvorbis libvpx openal-soft opus pcre speex string-theory `
          zlib --triplet x86-windows-static-dyncrt 2> $null
        Write-Host "OK" -foregroundColor Green

        Set-Location $path
    }

    Set-Location ..

    refreshenv
cache: C:\tools\vcpkg\installed
before_build:
- ps: |
    Set-Location build

    $prefix_path = "C:/tools/vcpkg/installed/x86-windows-static-dyncrt"
    If ($Env:CONFIGURATION -eq "Debug") {
      $prefix_path = "C:/tools/vcpkg/installed/x86-windows-static-dyncrt/debug;$prefix_path"
    }
    cmake -Wno-dev -AWin32 -DCMAKE_PREFIX_PATH=$prefix_path `
      -DCMAKE_INSTALL_PREFIX=dist -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=bin `
      -DPHYSX_SDK_PATH=C:\PhysX_SDK\SDKs -DQt5_DIR=C:\Qt\$Env:QT_VER\msvc2017\lib\cmake\Qt5 `
      -DPLASMA_EXTERNAL_RELEASE="$Env:PLASMA_EXTERNAL_RELEASE" -DPLASMA_BUILD_TESTS=ON `
      -DPLASMA_BUILD_TOOLS=ON -DPLASMA_BUILD_RESOURCE_DAT=ON ..
build:
  project: build/Plasma.sln
  parallel: true
  verbosity: quiet
before_package:
- ps: |
    if ((Test-Path -PathType Container bin\$Env:CONFIGURATION)) {
      Set-Location bin\$Env:CONFIGURATION
      Get-ChildItem -File *.exe | Foreach {& "C:\Qt\$Env:QT_VER\msvc2017\bin\windeployqt.exe" --verbose 0 $_.fullname 2> $null}
      ls
    }
test: off
